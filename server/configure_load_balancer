#!/usr/bin/env bash
# installs haproxy on a new load balancer and setups the config to point to your webserver's IP address

apt-get -y update
apt-get -y install haproxy
# Enable HAProxy
echo "ENABLED=1" | tee -a /etc/default/haproxy
clear
# Create a backup of the default haprocy.cfg and add sumple config
# HAProxy ssl setup guide https://serversforhackers.com/c/letsencrypt-with-haproxy
echo -e "You must edit the /etc/haproxy/haproxy.cfg file manually to set ip address and hostname\n Press i to enter INSERT mode, modify the required fields\n(I.e): <SERVER_IP> -> 127.0.0.0.1\nPress <ESC_KEY>:x and press enter to save and exit\n"

mv /etc/haproxy/haproxy.cfg /etc/haproxy/haproxy.cfg.default.bak

sleep 2

echo -e '# HAProxy Simple config for webservers listening at port 80\n# Commented out lines are required for https connection with certbot\ndefaults\n\tmode http\n\ttimeout connect 5000\n\ttimeout client 10000\n\ttimeout server 10000\n\ttimeout http-request 100\n\nfrontend www-http\n\tbind *:80\n\tmode http\n\t# http-request set-header X-Forwarded-Proto http\n\tdefault_backend www-backend\n\n# frontend www-https\n\t# bind *:443 ssl crt /etc/ssl/<PATHTOCERTBOTKEY/SECUREDOMAINNAME>.pem\n\t# http-request set-header X-Forwarded-Proto https\n\n\t# acl letsencrypt-acl path_beg /.well-known/acme-challenge/\n\t# use_backend letsencrypt-backend if letsencrypt-acl\n\n\t# default_backend www-backend\n\nbackend www-backend\n\tbalance roundrobin\n\n\t# http-request redirect scheme https code 301 if !{ ssl_fc }\n\tserver <HOSTNAME> <SERVER_IP>:80 check\n\tserver <HOSTNAME2> <SERVER_IP2>:80 check\n\nbackend letsencrypt-backend\n\tserver letsencrypt 127.0.0.1:8899' | tee /etc/haproxy/haproxy.cfg

vi +/HOSTNAME /etc/haproxy/haproxy.cfg

service haproxy restart
